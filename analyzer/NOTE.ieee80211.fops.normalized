adm8211/ieee80211/ops {
   .tx                 = adm8211_tx,
   .start              = adm8211_start,
   .stop               = adm8211_stop,
   .add_interface      = adm8211_add_interface,
   .remove_interface   = adm8211_remove_interface,
   .config             = adm8211_config,
   .bss_info_changed   = adm8211_bss_info_changed,
   .prepare_multicast  = adm8211_prepare_multicast,
   .configure_filter   = adm8211_configure_filter,
   .get_stats          = adm8211_get_stats,
   .get_tsf            = adm8211_get_tsft
};
at76c50x-usb/ieee80211/ops {
   .tx                 = at76_mac80211_tx,
   .add_interface      = at76_add_interface,
   .remove_interface   = at76_remove_interface,
   .config             = at76_config,
   .bss_info_changed   = at76_bss_info_changed,
   .configure_filter   = at76_configure_filter,
   .start              = at76_mac80211_start,
   .stop               = at76_mac80211_stop,
   .hw_scan            = at76_hw_scan,
   .set_key            = at76_set_key,
};
ar5523/ieee80211/ops {
   .start              = ar5523_start,
   .stop               = ar5523_stop,
   .tx                 = ar5523_tx,
   .set_rts_threshold  = ar5523_set_rts_threshold,
   .add_interface      = ar5523_add_interface,
   .remove_interface   = ar5523_remove_interface,
   .config             = ar5523_hwconfig,
   .bss_info_changed   = ar5523_bss_info_changed,
   .configure_filter   = ar5523_configure_filter,
   .flush              = ar5523_flush,
};
ath_ath10k/ieee80211/ops {
   .tx                 = ath10k_tx,
   .start              = ath10k_start,
   .stop               = ath10k_stop,
   .config             = ath10k_config,
   .add_interface      = ath10k_add_interface,
   .remove_interface   = ath10k_remove_interface,
   .configure_filter   = ath10k_configure_filter,
   .bss_info_changed   = ath10k_bss_info_changed,
   .hw_scan            = ath10k_hw_scan,
   .cancel_hw_scan     = ath10k_cancel_hw_scan,
   .set_key            = ath10k_set_key,
   .set_default_unicast_key= ath10k_set_default_unicast_key,
   .sta_state          = ath10k_sta_state,
   .conf_tx            = ath10k_conf_tx,
   .remain_on_channel  = ath10k_remain_on_channel,
   .cancel_remain_on_channel= ath10k_cancel_remain_on_channel,
   .set_rts_threshold  = ath10k_set_rts_threshold,
   .flush              = ath10k_flush,
   .tx_last_beacon     = ath10k_tx_last_beacon,
   .set_antenna        = ath10k_set_antenna,
   .get_antenna        = ath10k_get_antenna,
   .reconfig_complete  = ath10k_reconfig_complete,
   .get_survey         = ath10k_get_survey,
   .set_bitrate_mask   = ath10k_set_bitrate_mask,
   .sta_rc_update      = ath10k_sta_rc_update,
   .get_tsf            = ath10k_get_tsf,
   .ampdu_action       = ath10k_ampdu_action,
   .get_et_sset_count  = ath10k_debug_get_et_sset_count,
   .get_et_stats       = ath10k_debug_get_et_stats,
   .get_et_strings     = ath10k_debug_get_et_strings,
   .suspend            = ath10k_suspend,
   .resume             = ath10k_resume,
   .sta_add_debugfs    = ath10k_sta_add_debugfs,
};
ath_ath5k/ieee80211/ops {
   .tx                 = ath5k_tx,
   .start              = ath5k_start,
   .stop               = ath5k_stop,
   .add_interface      = ath5k_add_interface,
   .change_interface   = not
   .remove_interface   = ath5k_remove_interface,
   .config             = ath5k_config,
   .bss_info_changed   = ath5k_bss_info_changed,
   .prepare_multicast  = ath5k_prepare_multicast,
   .configure_filter   = ath5k_configure_filter,
   .set_tim            = not
   .set_key            = ath5k_set_key,
   .update_tkip_key    = not
   .hw_scan            = not
   .sw_scan_start      = ath5k_sw_scan_start,
   .sw_scan_complete   = ath5k_sw_scan_complete,
   .get_stats          = ath5k_get_stats,
   .get_tkip_seq       = not
   .set_frag_threshold = not
   .set_rts_threshold  = not
   .sta_add            = not
   .sta_remove         = not
   .sta_notify         = not
   .conf_tx            = ath5k_conf_tx,
   .get_tsf            = ath5k_get_tsf,
   .set_tsf            = ath5k_set_tsf,
   .reset_tsf          = ath5k_reset_tsf,
   .tx_last_beacon     = not
   .ampdu_action       = not
   .get_survey         = ath5k_get_survey,
   .set_coverage_class = ath5k_set_coverage_class,
   .rfkill_poll        = not
   .flush              = not
   .channel_switch     = not
   .napi_poll          = not
   .set_antenna        = ath5k_set_antenna,
   .get_antenna        = ath5k_get_antenna,
   .set_ringparam      = ath5k_set_ringparam,
   .get_ringparam      = ath5k_get_ringparam,
};
ath9k_htc/ieee80211/ops {
   .tx                 = ath9k_htc_tx,
   .start              = ath9k_htc_start,
   .stop               = ath9k_htc_stop,
   .add_interface      = ath9k_htc_add_interface,
   .remove_interface   = ath9k_htc_remove_interface,
   .config             = ath9k_htc_config,
   .configure_filter   = ath9k_htc_configure_filter,
   .sta_add            = ath9k_htc_sta_add,
   .sta_remove         = ath9k_htc_sta_remove,
   .conf_tx            = ath9k_htc_conf_tx,
   .sta_rc_update      = ath9k_htc_sta_rc_update,
   .bss_info_changed   = ath9k_htc_bss_info_changed,
   .set_key            = ath9k_htc_set_key,
   .get_tsf            = ath9k_htc_get_tsf,
   .set_tsf            = ath9k_htc_set_tsf,
   .reset_tsf          = ath9k_htc_reset_tsf,
   .ampdu_action       = ath9k_htc_ampdu_action,
   .sw_scan_start      = ath9k_htc_sw_scan_start,
   .sw_scan_complete   = ath9k_htc_sw_scan_complete,
   .set_rts_threshold  = ath9k_htc_set_rts_threshold,
   .rfkill_poll        = ath9k_htc_rfkill_poll_state,
   .set_coverage_class = ath9k_htc_set_coverage_class,
   .set_bitrate_mask   = ath9k_htc_set_bitrate_mask,
   .get_stats          = ath9k_htc_get_stats,
   .get_antenna        = ath9k_htc_get_antenna,
   .get_et_sset_count  = ath9k_htc_get_et_sset_count,
   .get_et_stats       = ath9k_htc_get_et_stats,
   .get_et_strings     = ath9k_htc_get_et_strings,
};
ath_ath9k/ieee80211/ops {
   .tx                 = ath9k_tx,
   .start              = ath9k_start,
   .stop               = ath9k_stop,
   .add_interface      = ath9k_add_interface,
   .change_interface   = ath9k_change_interface,
   .remove_interface   = ath9k_remove_interface,
   .config             = ath9k_config,
   .configure_filter   = ath9k_configure_filter,
   .sta_state          = ath9k_sta_state,
   .sta_notify         = ath9k_sta_notify,
   .conf_tx            = ath9k_conf_tx,
   .bss_info_changed   = ath9k_bss_info_changed,
   .set_key            = ath9k_set_key,
   .get_tsf            = ath9k_get_tsf,
   .set_tsf            = ath9k_set_tsf,
   .reset_tsf          = ath9k_reset_tsf,
   .ampdu_action       = ath9k_ampdu_action,
   .get_survey         = ath9k_get_survey,
   .rfkill_poll        = ath9k_rfkill_poll_state,
   .set_coverage_class = ath9k_set_coverage_class,
   .flush              = ath9k_flush,
   .tx_frames_pending  = ath9k_tx_frames_pending,
   .tx_last_beacon     = ath9k_tx_last_beacon,
   .release_buffered_frames= ath9k_release_buffered_frames,
   .get_stats          = ath9k_get_stats,
   .set_antenna        = ath9k_set_antenna,
   .get_antenna        = ath9k_get_antenna,
   .suspend            = ath9k_suspend,
   .resume             = ath9k_resume,
   .set_wakeup         = ath9k_set_wakeup,
   .get_et_sset_count  = ath9k_get_et_sset_count,
   .get_et_stats       = ath9k_get_et_stats,
   .get_et_strings     = ath9k_get_et_strings,
   .sta_add_debugfs    = ath9k_sta_add_debugfs,
   .sw_scan_start      = ath9k_sw_scan_start,
   .sw_scan_complete   = ath9k_sw_scan_complete,
   .get_txpower        = ath9k_get_txpower,
};
ath_carl9170/ieee80211/ops {
   .start              = carl9170_op_start,
   .stop               = carl9170_op_stop,
   .tx                 = carl9170_op_tx,
   .flush              = carl9170_op_flush,
   .add_interface      = carl9170_op_add_interface,
   .remove_interface   = carl9170_op_remove_interface,
   .config             = carl9170_op_config,
   .prepare_multicast  = carl9170_op_prepare_multicast,
   .configure_filter   = carl9170_op_configure_filter,
   .conf_tx            = carl9170_op_conf_tx,
   .bss_info_changed   = carl9170_op_bss_info_changed,
   .get_tsf            = carl9170_op_get_tsf,
   .set_key            = carl9170_op_set_key,
   .sta_add            = carl9170_op_sta_add,
   .sta_remove         = carl9170_op_sta_remove,
   .sta_notify         = carl9170_op_sta_notify,
   .get_survey         = carl9170_op_get_survey,
   .get_stats          = carl9170_op_get_stats,
   .ampdu_action       = carl9170_op_ampdu_action,
   .tx_frames_pending  = carl9170_tx_frames_pending,
};
ath_wcn36xx/ieee80211/ops {
   .start              = wcn36xx_start,
   .stop               = wcn36xx_stop,
   .add_interface      = wcn36xx_add_interface,
   .remove_interface   = wcn36xx_remove_interface,
   .suspend            = wcn36xx_suspend,
   .resume             = wcn36xx_resume,
   .config             = wcn36xx_config,
   .configure_filter   = wcn36xx_configure_filter,
   .tx                 = wcn36xx_tx,
   .set_key            = wcn36xx_set_key,
   .sw_scan_start      = wcn36xx_sw_scan_start,
   .sw_scan_complete   = wcn36xx_sw_scan_complete,
   .bss_info_changed   = wcn36xx_bss_info_changed,
   .set_rts_threshold  = wcn36xx_set_rts_threshold,
   .sta_add            = wcn36xx_sta_add,
   .sta_remove         = wcn36xx_sta_remove,
   .ampdu_action       = wcn36xx_ampdu_action,
};
b43/ieee80211/ops {
   .tx                 = b43_op_tx,
   .conf_tx            = b43_op_conf_tx,
   .add_interface      = b43_op_add_interface,
   .remove_interface   = b43_op_remove_interface,
   .config             = b43_op_config,
   .bss_info_changed   = b43_op_bss_info_changed,
   .configure_filter   = b43_op_configure_filter,
   .set_key            = b43_op_set_key,
   .update_tkip_key    = b43_op_update_tkip_key,
   .get_stats          = b43_op_get_stats,
   .get_tsf            = b43_op_get_tsf,
   .set_tsf            = b43_op_set_tsf,
   .start              = b43_op_start,
   .stop               = b43_op_stop,
   .set_tim            = b43_op_beacon_set_tim,
   .sta_notify         = b43_op_sta_notify,
   .sw_scan_start      = b43_op_sw_scan_start_notifier,
   .sw_scan_complete   = b43_op_sw_scan_complete_notifier,
   .get_survey         = b43_op_get_survey,
   .rfkill_poll        = b43_rfkill_poll,
};
b43legacy/ieee80211/ops {
   .tx                 = b43legacy_op_tx,
   .conf_tx            = b43legacy_op_conf_tx,
   .add_interface      = b43legacy_op_add_interface,
   .remove_interface   = b43legacy_op_remove_interface,
   .config             = b43legacy_op_dev_config,
   .bss_info_changed   = b43legacy_op_bss_info_changed,
   .configure_filter   = b43legacy_op_configure_filter,
   .get_stats          = b43legacy_op_get_stats,
   .start              = b43legacy_op_start,
   .stop               = b43legacy_op_stop,
   .set_tim            = b43legacy_op_beacon_set_tim,
   .get_survey         = b43legacy_op_get_survey,
   .rfkill_poll        = b43legacy_rfkill_poll,
};
brcm80211_brcmsmac/ieee80211/ops {
   .tx                 = brcms_ops_tx,
   .start              = brcms_ops_start,
   .stop               = brcms_ops_stop,
   .add_interface      = brcms_ops_add_interface,
   .remove_interface   = brcms_ops_remove_interface,
   .config             = brcms_ops_config,
   .bss_info_changed   = brcms_ops_bss_info_changed,
   .configure_filter   = brcms_ops_configure_filter,
   .sw_scan_start      = brcms_ops_sw_scan_start,
   .sw_scan_complete   = brcms_ops_sw_scan_complete,
   .conf_tx            = brcms_ops_conf_tx,
   .sta_add            = brcms_ops_sta_add,
   .ampdu_action       = brcms_ops_ampdu_action,
   .rfkill_poll        = brcms_ops_rfkill_poll,
   .flush              = brcms_ops_flush,
   .get_tsf            = brcms_ops_get_tsf,
   .set_tsf            = brcms_ops_set_tsf,
};
cw1200/ieee80211/ops {
   .start              = cw1200_start,
   .stop               = cw1200_stop,
   .add_interface      = cw1200_add_interface,
   .remove_interface   = cw1200_remove_interface,
   .change_interface   = cw1200_change_interface,
   .tx                 = cw1200_tx,
   .hw_scan            = cw1200_hw_scan,
   .set_tim            = cw1200_set_tim,
   .sta_notify         = cw1200_sta_notify,
   .sta_add            = cw1200_sta_add,
   .sta_remove         = cw1200_sta_remove,
   .set_key            = cw1200_set_key,
   .set_rts_threshold  = cw1200_set_rts_threshold,
   .config             = cw1200_config,
   .bss_info_changed   = cw1200_bss_info_changed,
   .prepare_multicast  = cw1200_prepare_multicast,
   .configure_filter   = cw1200_configure_filter,
   .conf_tx            = cw1200_conf_tx,
   .get_stats          = cw1200_get_stats,
   .ampdu_action       = cw1200_ampdu_action,
   .flush              = cw1200_flush,
   .suspend            = cw1200_wow_suspend,
   .resume             = cw1200_wow_resume,
   /*.channel_switch   = cw1200_channel_switch,
   /*.remain_on_channel= cw1200_remain_on_channel,
   /*.cancel_remain_on_channel= cw1200_cancel_remain_on_channel,
};
iwlegacy/ieee80211/ops {
   .tx                 = il4965_mac_tx,
   .start              = il4965_mac_start,
   .stop               = il4965_mac_stop,
   .add_interface      = il_mac_add_interface,
   .remove_interface   = il_mac_remove_interface,
   .change_interface   = il_mac_change_interface,
   .config             = il_mac_config,
   .configure_filter   = il4965_configure_filter,
   .set_key            = il4965_mac_set_key,
   .update_tkip_key    = il4965_mac_update_tkip_key,
   .conf_tx            = il_mac_conf_tx,
   .reset_tsf          = il_mac_reset_tsf,
   .bss_info_changed   = il_mac_bss_info_changed,
   .ampdu_action       = il4965_mac_ampdu_action,
   .hw_scan            = il_mac_hw_scan,
   .sta_add            = il4965_mac_sta_add,
   .sta_remove         = il_mac_sta_remove,
   .channel_switch     = il4965_mac_channel_switch,
   .tx_last_beacon     = il_mac_tx_last_beacon,
   .flush              = il_mac_flush,
};
iwlwifi/ieee80211/ops {
   .tx                 = iwlagn_mac_tx,
   .start              = iwlagn_mac_start,
   .stop               = iwlagn_mac_stop,
   .suspend            = iwlagn_mac_suspend,
   .resume             = iwlagn_mac_resume,
   .set_wakeup         = iwlagn_mac_set_wakeup,
   .add_interface      = iwlagn_mac_add_interface,
   .remove_interface   = iwlagn_mac_remove_interface,
   .change_interface   = iwlagn_mac_change_interface,
   .config             = iwlagn_mac_config,
   .configure_filter   = iwlagn_configure_filter,
   .set_key            = iwlagn_mac_set_key,
   .update_tkip_key    = iwlagn_mac_update_tkip_key,
   .set_rekey_data     = iwlagn_mac_set_rekey_data,
   .conf_tx            = iwlagn_mac_conf_tx,
   .bss_info_changed   = iwlagn_bss_info_changed,
   .ampdu_action       = iwlagn_mac_ampdu_action,
   .hw_scan            = iwlagn_mac_hw_scan,
   .sta_notify         = iwlagn_mac_sta_notify,
   .sta_state          = iwlagn_mac_sta_state,
   .channel_switch     = iwlagn_mac_channel_switch,
   .flush              = iwlagn_mac_flush,
   .tx_last_beacon     = iwlagn_mac_tx_last_beacon,
   .rssi_callback      = iwlagn_mac_rssi_callback,
   .set_tim            = iwlagn_mac_set_tim,
};
iwlwifi/ieee80211/ops {
   .tx                 = iwl_mvm_mac_tx,
   .ampdu_action       = iwl_mvm_mac_ampdu_action,
   .start              = iwl_mvm_mac_start,
   .reconfig_complete  = iwl_mvm_mac_reconfig_complete,
   .stop               = iwl_mvm_mac_stop,
   .add_interface      = iwl_mvm_mac_add_interface,
   .remove_interface   = iwl_mvm_mac_remove_interface,
   .config             = iwl_mvm_mac_config,
   .prepare_multicast  = iwl_mvm_prepare_multicast,
   .configure_filter   = iwl_mvm_configure_filter,
   .bss_info_changed   = iwl_mvm_bss_info_changed,
   .hw_scan            = iwl_mvm_mac_hw_scan,
   .cancel_hw_scan     = iwl_mvm_mac_cancel_hw_scan,
   .sta_pre_rcu_remove = iwl_mvm_sta_pre_rcu_remove,
   .sta_state          = iwl_mvm_mac_sta_state,
   .sta_notify         = iwl_mvm_mac_sta_notify,
   .allow_buffered_frames= iwl_mvm_mac_allow_buffered_frames,
   .release_buffered_frames= iwl_mvm_mac_release_buffered_frames,
   .set_rts_threshold  = iwl_mvm_mac_set_rts_threshold,
   .sta_rc_update      = iwl_mvm_sta_rc_update,
   .conf_tx            = iwl_mvm_mac_conf_tx,
   .mgd_prepare_tx     = iwl_mvm_mac_mgd_prepare_tx,
   .mgd_protect_tdls_discover= iwl_mvm_mac_mgd_protect_tdls_discover,
   .flush              = iwl_mvm_mac_flush,
   .sched_scan_start   = iwl_mvm_mac_sched_scan_start,
   .sched_scan_stop    = iwl_mvm_mac_sched_scan_stop,
   .set_key            = iwl_mvm_mac_set_key,
   .update_tkip_key    = iwl_mvm_mac_update_tkip_key,
   .remain_on_channel  = iwl_mvm_roc,
   .cancel_remain_on_channel= iwl_mvm_cancel_roc,
   .add_chanctx        = iwl_mvm_add_chanctx,
   .remove_chanctx     = iwl_mvm_remove_chanctx,
   .change_chanctx     = iwl_mvm_change_chanctx,
   .assign_vif_chanctx = iwl_mvm_assign_vif_chanctx,
   .unassign_vif_chanctx= iwl_mvm_unassign_vif_chanctx,
   .switch_vif_chanctx = iwl_mvm_switch_vif_chanctx,
   .start_ap           = iwl_mvm_start_ap_ibss,
   .stop_ap            = iwl_mvm_stop_ap_ibss,
   .join_ibss          = iwl_mvm_start_ap_ibss,
   .leave_ibss         = iwl_mvm_stop_ap_ibss,
   .set_tim            = iwl_mvm_set_tim,
   .channel_switch     = iwl_mvm_channel_switch,
   .pre_channel_switch = iwl_mvm_pre_channel_switch,
   .post_channel_switch= iwl_mvm_post_channel_switch,
   .tdls_channel_switch= iwl_mvm_tdls_channel_switch,
   .tdls_cancel_channel_switch= iwl_mvm_tdls_cancel_channel_switch,
   .tdls_recv_channel_switch= iwl_mvm_tdls_recv_channel_switch,
   .suspend            = iwl_mvm_suspend,
   .resume             = iwl_mvm_resume,
   .set_wakeup         = iwl_mvm_set_wakeup,
   .set_rekey_data     = iwl_mvm_set_rekey_data,
   .ipv6_addr_change   = iwl_mvm_ipv6_addr_change,
   .set_default_unicast_key= iwl_mvm_set_default_unicast_key,
};
libertas_tf/ieee80211/ops {
   .tx                 = lbtf_op_tx,
   .start              = lbtf_op_start,
   .stop               = lbtf_op_stop,
   .add_interface      = lbtf_op_add_interface,
   .remove_interface   = lbtf_op_remove_interface,
   .config             = lbtf_op_config,
   .prepare_multicast  = lbtf_op_prepare_multicast,
   .configure_filter   = lbtf_op_configure_filter,
   .bss_info_changed   = lbtf_op_bss_info_changed,
   .get_survey         = lbtf_op_get_survey,
};
mac80211_hwsim/ieee80211/ops {
   .tx                 = mac80211_hwsim_tx,
   .start              = mac80211_hwsim_start,
   .stop               = mac80211_hwsim_stop,
   .add_interface      = mac80211_hwsim_add_interface,
   .change_interface   = mac80211_hwsim_change_interface,
   .remove_interface   = mac80211_hwsim_remove_interface,
   .config             = mac80211_hwsim_config,
   .configure_filter   = mac80211_hwsim_configure_filter,
   .bss_info_changed   = mac80211_hwsim_bss_info_changed,
   .sta_add            = mac80211_hwsim_sta_add,
   .sta_remove         = mac80211_hwsim_sta_remove,
   .sta_notify         = mac80211_hwsim_sta_notify,
   .set_tim            = mac80211_hwsim_set_tim,
   .conf_tx            = mac80211_hwsim_conf_tx,
   .get_survey         = mac80211_hwsim_get_survey,
   .ampdu_action       = mac80211_hwsim_ampdu_action,
   .sw_scan_start      = mac80211_hwsim_sw_scan,
   .sw_scan_complete   = mac80211_hwsim_sw_scan_complete,
   .flush              = mac80211_hwsim_flush,
   .get_tsf            = mac80211_hwsim_get_tsf,
   .set_tsf            = mac80211_hwsim_set_tsf,
   .get_et_sset_count  = mac80211_hwsim_get_et_sset_count,
   .get_et_stats       = mac80211_hwsim_get_et_stats,
   .get_et_strings     = mac80211_hwsim_get_et_strings,
};
mwl8k/ieee80211/ops {
   .tx                 = mwl8k_tx,
   .start              = mwl8k_start,
   .stop               = mwl8k_stop,
   .add_interface      = mwl8k_add_interface,
   .remove_interface   = mwl8k_remove_interface,
   .config             = mwl8k_config,
   .bss_info_changed   = mwl8k_bss_info_changed,
   .prepare_multicast  = mwl8k_prepare_multicast,
   .configure_filter   = mwl8k_configure_filter,
   .set_key            = mwl8k_set_key,
   .set_rts_threshold  = mwl8k_set_rts_threshold,
   .sta_add            = mwl8k_sta_add,
   .sta_remove         = mwl8k_sta_remove,
   .conf_tx            = mwl8k_conf_tx,
   .get_stats          = mwl8k_get_stats,
   .get_survey         = mwl8k_get_survey,
   .ampdu_action       = mwl8k_ampdu_action,
   .sw_scan_start      = mwl8k_sw_scan_start,
   .sw_scan_complete   = mwl8k_sw_scan_complete,
};
p54/ieee80211/ops {
   .tx                 = p54_tx_80211,
   .start              = p54_start,
   .stop               = p54_stop,
   .add_interface      = p54_add_interface,
   .remove_interface   = p54_remove_interface,
   .set_tim            = p54_set_tim,
   .sta_notify         = p54_sta_notify,
   .sta_add            = p54_sta_add_remove,
   .sta_remove         = p54_sta_add_remove,
   .set_key            = p54_set_key,
   .config             = p54_config,
   .flush              = p54_flush,
   .bss_info_changed   = p54_bss_info_changed,
   .prepare_multicast  = p54_prepare_multicast,
   .configure_filter   = p54_configure_filter,
   .conf_tx            = p54_conf_tx,
   .get_stats          = p54_get_stats,
   .get_survey         = p54_get_survey,
   .set_coverage_class = p54_set_coverage_class,
};
rsi/ieee80211/ops {
   .tx                 = rsi_mac80211_tx,
   .start              = rsi_mac80211_start,
   .stop               = rsi_mac80211_stop,
   .add_interface      = rsi_mac80211_add_interface,
   .remove_interface   = rsi_mac80211_remove_interface,
   .config             = rsi_mac80211_config,
   .bss_info_changed   = rsi_mac80211_bss_info_changed,
   .conf_tx            = rsi_mac80211_conf_tx,
   .configure_filter   = rsi_mac80211_conf_filter,
   .set_key            = rsi_mac80211_set_key,
   .set_rts_threshold  = rsi_mac80211_set_rts_threshold,
   .set_bitrate_mask   = rsi_mac80211_set_rate_mask,
   .ampdu_action       = rsi_mac80211_ampdu_action,
   .sta_add            = rsi_mac80211_sta_add,
   .sta_remove         = rsi_mac80211_sta_remove,
};
rt2400pci/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2400pci_conf_tx,
   .get_tsf            = rt2400pci_get_tsf,
   .tx_last_beacon     = rt2400pci_tx_last_beacon,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .flush              = rt2x00mac_flush,
   .set_antenna        = rt2x00mac_set_antenna,
   .get_antenna        = rt2x00mac_get_antenna,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt2500pci/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2x00mac_conf_tx,
   .get_tsf            = rt2500pci_get_tsf,
   .tx_last_beacon     = rt2500pci_tx_last_beacon,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .flush              = rt2x00mac_flush,
   .set_antenna        = rt2x00mac_set_antenna,
   .get_antenna        = rt2x00mac_get_antenna,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt2500usb/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_tim            = rt2x00mac_set_tim,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2x00mac_conf_tx,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .flush              = rt2x00mac_flush,
   .set_antenna        = rt2x00mac_set_antenna,
   .get_antenna        = rt2x00mac_get_antenna,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt2800pci/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .get_tkip_seq       = rt2800_get_tkip_seq,
   .set_rts_threshold  = rt2800_set_rts_threshold,
   .sta_add            = rt2x00mac_sta_add,
   .sta_remove         = rt2x00mac_sta_remove,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2800_conf_tx,
   .get_tsf            = rt2800_get_tsf,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .ampdu_action       = rt2800_ampdu_action,
   .flush              = rt2x00mac_flush,
   .get_survey         = rt2800_get_survey,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt2800soc/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .get_tkip_seq       = rt2800_get_tkip_seq,
   .set_rts_threshold  = rt2800_set_rts_threshold,
   .sta_add            = rt2x00mac_sta_add,
   .sta_remove         = rt2x00mac_sta_remove,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2800_conf_tx,
   .get_tsf            = rt2800_get_tsf,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .ampdu_action       = rt2800_ampdu_action,
   .flush              = rt2x00mac_flush,
   .get_survey         = rt2800_get_survey,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt2800usb/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_tim            = rt2x00mac_set_tim,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .get_tkip_seq       = rt2800_get_tkip_seq,
   .set_rts_threshold  = rt2800_set_rts_threshold,
   .sta_add            = rt2x00mac_sta_add,
   .sta_remove         = rt2x00mac_sta_remove,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt2800_conf_tx,
   .get_tsf            = rt2800_get_tsf,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .ampdu_action       = rt2800_ampdu_action,
   .flush              = rt2x00mac_flush,
   .get_survey         = rt2800_get_survey,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt61pci/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt61pci_conf_tx,
   .get_tsf            = rt61pci_get_tsf,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .flush              = rt2x00mac_flush,
   .set_antenna        = rt2x00mac_set_antenna,
   .get_antenna        = rt2x00mac_get_antenna,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rt73usb/ieee80211/ops {
   .tx                 = rt2x00mac_tx,
   .start              = rt2x00mac_start,
   .stop               = rt2x00mac_stop,
   .add_interface      = rt2x00mac_add_interface,
   .remove_interface   = rt2x00mac_remove_interface,
   .config             = rt2x00mac_config,
   .configure_filter   = rt2x00mac_configure_filter,
   .set_tim            = rt2x00mac_set_tim,
   .set_key            = rt2x00mac_set_key,
   .sw_scan_start      = rt2x00mac_sw_scan_start,
   .sw_scan_complete   = rt2x00mac_sw_scan_complete,
   .get_stats          = rt2x00mac_get_stats,
   .bss_info_changed   = rt2x00mac_bss_info_changed,
   .conf_tx            = rt73usb_conf_tx,
   .get_tsf            = rt73usb_get_tsf,
   .rfkill_poll        = rt2x00mac_rfkill_poll,
   .flush              = rt2x00mac_flush,
   .set_antenna        = rt2x00mac_set_antenna,
   .get_antenna        = rt2x00mac_get_antenna,
   .get_ringparam      = rt2x00mac_get_ringparam,
   .tx_frames_pending  = rt2x00mac_tx_frames_pending,
};
rtl818x_rtl8180/ieee80211/ops {
   .tx                 = rtl8180_tx,
   .start              = rtl8180_start,
   .stop               = rtl8180_stop,
   .add_interface      = rtl8180_add_interface,
   .remove_interface   = rtl8180_remove_interface,
   .config             = rtl8180_config,
   .bss_info_changed   = rtl8180_bss_info_changed,
   .conf_tx            = rtl8180_conf_tx,
   .prepare_multicast  = rtl8180_prepare_multicast,
   .configure_filter   = rtl8180_configure_filter,
   .get_tsf            = rtl8180_get_tsf,
};
rtl818x_rtl8187/ieee80211/ops {
   .tx                 = rtl8187_tx,
   .start              = rtl8187_start,
   .stop               = rtl8187_stop,
   .add_interface      = rtl8187_add_interface,
   .remove_interface   = rtl8187_remove_interface,
   .config             = rtl8187_config,
   .bss_info_changed   = rtl8187_bss_info_changed,
   .prepare_multicast  = rtl8187_prepare_multicast,
   .configure_filter   = rtl8187_configure_filter,
   .conf_tx            = rtl8187_conf_tx,
   .rfkill_poll        = rtl8187_rfkill_poll,
   .get_tsf            = rtl8187_get_tsf,
};
rtlwifi/ieee80211/ops {
   .start              = rtl_op_start,
   .stop               = rtl_op_stop,
   .tx                 = rtl_op_tx,
   .add_interface      = rtl_op_add_interface,
   .remove_interface   = rtl_op_remove_interface,
   .change_interface   = rtl_op_change_interface,
   .suspend            = rtl_op_suspend,
   .resume             = rtl_op_resume,
   .config             = rtl_op_config,
   .configure_filter   = rtl_op_configure_filter,
   .set_key            = rtl_op_set_key,
   .conf_tx            = rtl_op_conf_tx,
   .bss_info_changed   = rtl_op_bss_info_changed,
   .get_tsf            = rtl_op_get_tsf,
   .set_tsf            = rtl_op_set_tsf,
   .reset_tsf          = rtl_op_reset_tsf,
   .sta_notify         = rtl_op_sta_notify,
   .ampdu_action       = rtl_op_ampdu_action,
   .sw_scan_start      = rtl_op_sw_scan_start,
   .sw_scan_complete   = rtl_op_sw_scan_complete,
   .rfkill_poll        = rtl_op_rfkill_poll,
   .sta_add            = rtl_op_sta_add,
   .sta_remove         = rtl_op_sta_remove,
   .flush              = rtl_op_flush,
};
ti_wl1251/ieee80211/ops {
   .start              = wl1251_op_start,
   .stop               = wl1251_op_stop,
   .add_interface      = wl1251_op_add_interface,
   .remove_interface   = wl1251_op_remove_interface,
   .config             = wl1251_op_config,
   .prepare_multicast  = wl1251_op_prepare_multicast,
   .configure_filter   = wl1251_op_configure_filter,
   .tx                 = wl1251_op_tx,
   .set_key            = wl1251_op_set_key,
   .hw_scan            = wl1251_op_hw_scan,
   .bss_info_changed   = wl1251_op_bss_info_changed,
   .set_rts_threshold  = wl1251_op_set_rts_threshold,
   .conf_tx            = wl1251_op_conf_tx,
   .get_survey         = wl1251_op_get_survey,
};
ti_wlcore/ieee80211/ops {
   .start              = wl1271_op_start,
   .stop               = wlcore_op_stop,
   .add_interface      = wl1271_op_add_interface,
   .remove_interface   = wl1271_op_remove_interface,
   .change_interface   = wl12xx_op_change_interface,
   .suspend            = wl1271_op_suspend,
   .resume             = wl1271_op_resume,
   .config             = wl1271_op_config,
   .prepare_multicast  = wl1271_op_prepare_multicast,
   .configure_filter   = wl1271_op_configure_filter,
   .tx                 = wl1271_op_tx,
   .set_key            = wlcore_op_set_key,
   .hw_scan            = wl1271_op_hw_scan,
   .cancel_hw_scan     = wl1271_op_cancel_hw_scan,
   .sched_scan_start   = wl1271_op_sched_scan_start,
   .sched_scan_stop    = wl1271_op_sched_scan_stop,
   .bss_info_changed   = wl1271_op_bss_info_changed,
   .set_frag_threshold = wl1271_op_set_frag_threshold,
   .set_rts_threshold  = wl1271_op_set_rts_threshold,
   .conf_tx            = wl1271_op_conf_tx,
   .get_tsf            = wl1271_op_get_tsf,
   .get_survey         = wl1271_op_get_survey,
   .sta_state          = wl12xx_op_sta_state,
   .ampdu_action       = wl1271_op_ampdu_action,
   .tx_frames_pending  = wl1271_tx_frames_pending,
   .set_bitrate_mask   = wl12xx_set_bitrate_mask,
   .set_default_unicast_key= wl1271_op_set_default_key_idx,
   .channel_switch     = wl12xx_op_channel_switch,
   .channel_switch_beacon= wlcore_op_channel_switch_beacon,
   .flush              = wlcore_op_flush,
   .remain_on_channel  = wlcore_op_remain_on_channel,
   .cancel_remain_on_channel= wlcore_op_cancel_remain_on_channel,
   .add_chanctx        = wlcore_op_add_chanctx,
   .remove_chanctx     = wlcore_op_remove_chanctx,
   .change_chanctx     = wlcore_op_change_chanctx,
   .assign_vif_chanctx = wlcore_op_assign_vif_chanctx,
   .unassign_vif_chanctx= wlcore_op_unassign_vif_chanctx,
   .switch_vif_chanctx = wlcore_op_switch_vif_chanctx,
   .sta_rc_update      = wlcore_op_sta_rc_update,
   .sta_statistics     = wlcore_op_sta_statistics,
};
zd1211rw/ieee80211/ops {
   .tx                 = zd_op_tx,
   .start              = zd_op_start,
   .stop               = zd_op_stop,
   .add_interface      = zd_op_add_interface,
   .remove_interface   = zd_op_remove_interface,
   .config             = zd_op_config,
   .prepare_multicast  = zd_op_prepare_multicast,
   .configure_filter   = zd_op_configure_filter,
   .bss_info_changed   = zd_op_bss_info_changed,
   .get_tsf            = zd_op_get_tsf,
};
